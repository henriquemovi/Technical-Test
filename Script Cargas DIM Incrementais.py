{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymssql\n",
    "\n",
    "# Abre conexão com o banco de dados\n",
    "conexao = pymssql.connect(\n",
    "    server=\"teste-datasprints.cumenodwpcwm.sa-east-1.rds.amazonaws.com\",\n",
    "    port = 1433,\n",
    "    user='admin',\n",
    "    password='kz89oi67',\n",
    "    database='teste_enem_db'\n",
    ")\n",
    "\n",
    "\n",
    "\n",
    "#Cursor pra executar queries no banco SQL\n",
    "cursor = conexao.cursor()\n",
    "cursor.execute(\"\"\"\n",
    "--Cargas DIM Incrementais\n",
    "\n",
    "--Carga DIM_Cidade\n",
    "\n",
    "BEGIN\n",
    "\n",
    "WITH CIDADE AS(\n",
    "SELECT \n",
    "\t ISNULL(sc.id_cidade,-1) AS ID_Cidade\n",
    "\t, ISNULL(sc.cidade, 'NÃO ENCONTRADO')AS Descricao_Cidade\n",
    "\t, ISNULL(de.srk_estado, -1) AS SRK_Estado \n",
    "\t, ISNULL(sc.latitude, -1) as Latitude\n",
    "\t, ISNULL(sc.longitude, -1) as Longitude\n",
    "FROM STG_Cidade sc WITH(NOLOCK)\n",
    "LEFT JOIN DIM_Estado de ON de.Descricao_Estado =  sc.estado\n",
    "EXCEPT \n",
    "SELECT ID_Cidade,Descricao_Cidade,SRK_Estado,Latitude,Longitude FROM DIM_Cidade WITH(NOLOCK)\n",
    ")\n",
    "\n",
    "MERGE DIM_Cidade AS target\n",
    "       USING (SELECT DISTINCT ID_Cidade,Descricao_Cidade,SRK_Estado,Latitude,Longitude\n",
    "\t\t\t\tFROM CIDADE ) AS SOURCE (ID_Cidade,Descricao_Cidade,SRK_Estado,Latitude,Longitude)\n",
    "\t\t\tON target.ID_Cidade = SOURCE.ID_Cidade\n",
    "\t\t\tAND target.SRK_Estado = SOURCE.SRK_Estado\n",
    "WHEN MATCHED THEN \n",
    "\t\t\tUPDATE SET \n",
    "\t\t\t\t\t\tID_Cidade = SOURCE.ID_Cidade\n",
    "\t\t\t\t\t\t,Descricao_Cidade\t\t = SOURCE.Descricao_Cidade\t\t \n",
    "\t\t\t\t\t\t,SRK_Estado\t\t\t = SOURCE.SRK_Estado\t\t\t \n",
    "\t\t\t\t\t\t,Latitude\t\t = SOURCE.Latitude\n",
    "\t\t\t\t\t\t,Longitude\t\t = SOURCE.Longitude\n",
    "\t\t\t\t\t\t,Data_Alteracao\t = GETDATE()\n",
    " WHEN NOT MATCHED THEN\t\n",
    "\t\t\tINSERT \t(ID_Cidade,Descricao_Cidade,SRK_Estado,Latitude,Longitude,Data_Inclusao)\n",
    "\t\t\tVALUES(\t\tSOURCE.ID_Cidade\n",
    "\t\t\t\t\t\t,SOURCE.Descricao_Cidade\n",
    "\t\t\t\t\t\t,SOURCE.SRK_Estado\t\t\n",
    "\t\t\t\t\t\t,SOURCE.Latitude\t\t\t \n",
    "\t\t\t\t\t\t,SOURCE.Longitude\n",
    "\t\t\t\t\t\t,GETDATE());\n",
    "\n",
    "\n",
    "END\n",
    "\n",
    "--Carga DIM_Aluno\n",
    "\n",
    "BEGIN\n",
    "\n",
    "\n",
    "WITH ALUNO AS(\n",
    "SELECT \n",
    "\t ISNULL(dtce.SRK_Tipo_Conclusao_EM,-1) AS SRK_Tipo_Conclusao_EM\n",
    "\t, ISNULL(sa.NU_INSCRICAO, -1)AS ID_Aluno\n",
    "\t, ISNULL(sa.NU_IDADE, -1) as Idade\n",
    "\t, ISNULL(sa.TP_SEXO, -1) as Sexo\n",
    "FROM STG_Aluno sa WITH(NOLOCK)\n",
    "LEFT JOIN DIM_Tipo_Conclusao_EM dtce ON dtce.ID_Tipo_Conclusao_EM =  sa.TP_ST_CONCLUSAO\n",
    "EXCEPT \n",
    "SELECT SRK_Tipo_Conclusao_EM,ID_Aluno,Idade,Sexo FROM DIM_Aluno WITH(NOLOCK)\n",
    ")\n",
    "\n",
    "MERGE DIM_Aluno AS target \n",
    "       USING (SELECT DISTINCT SRK_Tipo_Conclusao_EM,ID_Aluno,Idade,Sexo\n",
    "\t\t\t\tFROM ALUNO ) AS SOURCE (SRK_Tipo_Conclusao_EM,ID_Aluno,Idade,Sexo)\n",
    "\t\t\tON target.ID_Aluno = SOURCE.ID_Aluno\n",
    "WHEN MATCHED THEN \n",
    "\t\t\tUPDATE SET \n",
    "\t\t\t\t\t\tSRK_Tipo_Conclusao_EM = SOURCE.SRK_Tipo_Conclusao_EM\t \n",
    "\t\t\t\t\t\t,ID_Aluno\t\t\t = SOURCE.ID_Aluno\t\t\t \n",
    "\t\t\t\t\t\t,Idade\t\t = SOURCE.Idade\n",
    "\t\t\t\t\t\t,Sexo\t\t = SOURCE.Sexo\n",
    "\t\t\t\t\t\t,Data_Alteracao\t = GETDATE()\n",
    " WHEN NOT MATCHED THEN\t\n",
    "\t\t\tINSERT \t(SRK_Tipo_Conclusao_EM,ID_Aluno,Idade,Sexo,Data_Inclusao)\n",
    "\t\t\tVALUES(\t\tSOURCE.SRK_Tipo_Conclusao_EM\n",
    "\t\t\t\t\t\t,SOURCE.ID_Aluno\t\t\n",
    "\t\t\t\t\t\t,SOURCE.Idade\t\t\t \n",
    "\t\t\t\t\t\t,SOURCE.Sexo\n",
    "\t\t\t\t\t\t,GETDATE());\n",
    "\n",
    "\n",
    "\n",
    "END\n",
    "\n",
    "--Carga FATO_Notas\n",
    "\n",
    "BEGIN\n",
    "\n",
    "insert into FATO_Notas (SRK_Cidade,SRK_Aluno, NU_NOTA_CN, NU_NOTA_CH, NU_NOTA_LC, NU_NOTA_MT, NU_NOTA_COMP1, NU_NOTA_COMP2, NU_NOTA_COMP3, NU_NOTA_COMP4, NU_NOTA_COMP5, NU_NOTA_REDACAO)\n",
    "select\t\n",
    "\t\tISNULL(dc.SRK_Cidade,-1)\t\t\t\tAS SRK_Cidade,\n",
    "\t\tISNULL(da.SRK_Aluno,-1)\t\t\t\tAS SRK_Aluno,\n",
    "\t\tNU_NOTA_CN, \n",
    "\t\tNU_NOTA_CH, \n",
    "\t\tNU_NOTA_LC, \n",
    "\t\tNU_NOTA_MT, \n",
    "\t\tNU_NOTA_COMP1, \n",
    "\t\tNU_NOTA_COMP2, \n",
    "\t\tNU_NOTA_COMP3, \n",
    "\t\tNU_NOTA_COMP4, \n",
    "\t\tNU_NOTA_COMP5, \n",
    "\t\tNU_NOTA_REDACAO\n",
    "from STG_Fato_Notas as sfn\n",
    "left join DIM_Estado de on de.Sigla_Estado = sfn.SG_UF_RESIDENCIA\n",
    "left join DIM_Cidade dc on dc.Descricao_Cidade =  sfn.NO_MUNICIPIO_RESIDENCIA and dc.SRK_Estado = de.SRK_Estado\n",
    "left join DIM_Aluno da on da.ID_Aluno = sfn.NU_INSCRICAO\n",
    "\n",
    "delete from FATO_Notas where srk_cidade = -1\n",
    "\n",
    "\n",
    "END\n",
    "\n",
    "\n",
    "\"\"\")\n",
    "\n",
    "# Comita os dados\n",
    "conexao.commit()\n",
    "# Fecha o cursor\n",
    "cursor.close()\n",
    "\n",
    "# Fecha a conexão\n",
    "conexao.close() "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
